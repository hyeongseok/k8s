#!/usr/bin/env bash

LXC_IMAGE=ubuntu:22.04
# haproxy, keepalived
p() { 
  export declare -a ORDER="k8s-c01-ha01 k8s-c01-ha02"
  export declare -A NODES=( [k8s-c01-ha01]="172.30.0.16" [k8s-c01-ha02]="172.30.0.17" ) 
}
# master control-plane
m() { 
  export declare -a ORDER="k8s-c01-m01 k8s-c01-m02 k8s-c01-m03"
  export declare -A NODES=( [k8s-c01-m01]="172.30.0.11" [k8s-c01-m02]="172.30.0.12" [k8s-c01-m03]="172.30.0.13" ) 
}
# # worker
w() { 
  export declare -a ORDER="k8s-c01-w01 k8s-c01-w02 k8s-c01-w03"
  export declare -A NODES=( [k8s-c01-w01]="172.30.0.21" [k8s-c01-w02]="172.30.0.22" [k8s-c01-w03]="172.30.0.23" ) 
}

getNodeType() {
  type=$(echo $1 | cut -d '-' -f 3)
  if [[ $type =~ .*ha.* ]]; then
    echo "k8s-ha"
    return
  fi
  if [[ $type =~ .*m.* ]]; then
    echo "k8s-m"
    return
  fi
  if [[ $type =~ .*w.* ]]; then
    echo "k8s-w"
  fi
}

createCluster() {
  for exportNodeInfo in $LIST; do
    $exportNodeInfo >/dev/null 2>&1
    for node in $ORDER; do
      profile=$(getNodeType $node)
      lxc profile list | cut -d' ' -f2 | grep -qow '^${profile}$' || (lxc profile create ${profile} > /dev/null 2>&1 && cat ${profile}-config | lxc profile edit ${profile})
      echo "==> Bringing up $node"
      lxc launch ${LXC_IMAGE} ${node} --profile ${profile} --device eth0,ipv4.address=${NODES[$node]}
      sleep 10
      echo "==> Running bootstrap.sh"
      cat bootstrap.sh | lxc exec $node bash
      echo
    done
  done       
}

command() {
  for exportNodeInfo in $LIST; do
    $exportNodeInfo >/dev/null 2>&1
    for node in $ORDER; do
      echo "$1 $node..."
      lxc $2 $node > /dev/null 2>&1
    done
  done   
}

usage() {
  # echo "Usage: provision [create|delete] [p(roxy)|m(aster)|w(orker)]"
  echo "Usage: provision [create|delete]"
  exit 1
}

prompt() {
  # export LIST=$(echo "${2:0:1} ${3:0:1} ${4:0:1}" | xargs -n1 | sort -u | xargs)    
  export LIST="p m w"
  read -p "Are you sure (Y/n)? " answer
  answer=${answer:-y}
  export answer=${answer:0:1}
  echo
}

case "$1" in
  create)
    echo -e "\nCreating Kubernetes Cluster.\n"
    prompt $@
    case $answer in
      y|Y) 
        createCluster 
        ;;
    esac
    ;;
  delete)
    echo -e "\nDeleting Kubernetes Cluster.\n"
    prompt $@
    case $answer in
      y|Y) 
        command "==> Deleting" "delete --force" 
        ;;
    esac
    ;;
  stop)
    echo -e "\nStopping Kubernetes Cluster.\n"
    prompt $@
    case $answer in
      y|Y) 
        command "==> Stopping" "stop" 
        ;;
    esac    
    ;;
  start)
    echo -e "\nStarting Kubernetes Cluster.\n"
    prompt $@
    case $answer in
      y|Y) 
        command "==> Starting" "start" 
        ;;
    esac    
    ;;
  *)
    usage
    ;;
esac